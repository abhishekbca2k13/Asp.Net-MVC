        //database connection string
        SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Con"].ConnectionString);
        
//CREATE
 /// <summary>
        /// method to register new faculty and inserting detail of facuty ino faculty table
        /// </summary>
        /// <param name="fr"></param>
        /// <returns>registered faculty id</returns>
        public int FacultyCreate(Faculty fr)
        {
            //to generate global uniqe identefier
            Guid guid = Guid.NewGuid();
            int i = 0;
            
                SqlCommand cmd = new SqlCommand("YourStoredProcedure", con);
                cmd.CommandType = CommandType.StoredProcedure;
                
                cmd.Parameters.AddWithValue("@f_name", fr.f_name);
                cmd.Parameters.AddWithValue("@f_phone", fr.f_phone);
                cmd.Parameters.AddWithValue("@f_email", fr.f_email);
                cmd.Parameters.AddWithValue("@f_password", fr.f_password);
                cmd.Parameters.AddWithValue("@f_subject_code", fr.f_subject_code);                
                cmd.Parameters.AddWithValue("@guid", guid.ToString());

                //To read id from database
                cmd.Parameters.Add("@f_id", SqlDbType.Int);
                cmd.Parameters["@f_id"].Direction = ParameterDirection.Output;
                
                con.Open();
                i = cmd.ExecuteNonQuery();
                fr.f_id = Convert.ToInt32(cmd.Parameters["@f_id"].Value);
                con.Close();

            }
            
//READ BY ID
        /// <summary>
        /// Read data of faculty from database from faculty table using id
        /// </summary>
        /// <param name="id"></param>
        /// <returns>return the detail of the particular id</returns>
        public Faculty ReadFacultyById(int id)
        {
            int i = 0;
            Faculty fr = new Faculty();

                SqlCommand cmd = new SqlCommand("SELECT * FROM facultyTable WHERE f_id=" + id, con);

                //Code to read the data rows from database
                SqlDataAdapter da = new SqlDataAdapter(cmd);
                DataTable dt = new DataTable();
                da.Fill(dt);
                con.Open();
                foreach (DataRow dr in dt.Rows)
                {
                    fr.f_id = Convert.ToInt32(dr["f_id"]);
                    fr.f_name = Convert.ToString(dr["f_name"]);
                    fr.f_email = Convert.ToString(dr["f_email"]);
                    fr.f_phone = Convert.ToString(dr["f_phone"]);
                    fr.guid = Convert.ToString(dr["guid"]);
                    fr.f_subject_code = Convert.ToString(dr["f_subject_code"]);
                }
                i = cmd.ExecuteNonQuery();
                con.Close();
            }
            
            
        //Read All Student             
        public List<Student> ReadAllStudentDetail()
        {
                List<Student> studentList = new List<Student>();

                SqlCommand cmd = new SqlCommand("select * from student", con);                

                SqlDataAdapter da = new SqlDataAdapter(cmd);
                DataTable dt = new DataTable();

                con.Open();
                da.Fill(dt);
                con.Close();
                foreach(DataRow dr in dt.Rows)
                {
                    studentList.Add(
                                            new Student
                                            {
                                                s_id = Convert.ToInt32(dr["s_id"]),
                                                s_name = Convert.ToString(dr["s_name"]),
                                                s_email = Convert.ToString(dr["s_email"]),
                                                s_phone = Convert.ToString(dr["s_phone"]),
                                                s_branch_code = Convert.ToString(dr["s_branch_code"]),
                                                createdOn = Convert.ToDateTime(dr["createdOn"]),
                                                modifiedOn = Convert.ToDateTime(dr["modifiedOn"]),
                                                //deletedOn = Convert.ToDateTime(dr["deletedOn"]),
                                                isdeleted = Convert.ToBoolean(dr["isdeleted"]),
                                                guid = Convert.ToString(dr["guid"]),
                                                active = Convert.ToBoolean(dr["active"])
                                            }
                                     );
                }
            }

